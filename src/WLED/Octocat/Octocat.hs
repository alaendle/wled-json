module WLED.Octocat.Octocat(deviceSpec) where

import WLED.Device (DeviceSpec (DeviceSpec))

deviceSpec :: DeviceSpec Int
deviceSpec = DeviceSpec lightPositions (100,100)

-- >>> length lightPositions
-- 101
lightPositions :: [(Int, Int)]
lightPositions = [
    (51,96),
    (54,96),
    (61,95),
    (70,92),
    (77,88),
    (82,83),
    (88,77),
    (92,69),
    (94,63),
    (96,55),
    (95,46),
    (94,37),
    (91,31),
    (88,24),
    (82,17),
    (77,12),
    (71,8),
    (64,5),
    (57,3),
    (48,3),
    (41,4),
    (33,6),
    (25,10),
    (19,14),
    (14,19),
    (9,26),
    (5,33),
    (4,39),
    (3,48),
    (3,55),
    (5,63),
    (8,71),
    (13,79),
    (17,84),
    (23,88),
    (30,92),
    (37,95),
    (45,96),
    (46,98),
    (41,93),
    (33,92),
    (25,87),
    (19,82),
    (13,76),
    (8,68),
    (6,60),
    (4,51),
    (5,43),
    (8,34),
    (11,27),
    (17,19),
    (23,14),
    (30,10),
    (38,7),
    (45,5),
    (55,5),
    (63,7),
    (71,11),
    (78,16),
    (84,22),
    (88,29),
    (91,37),
    (93,46),
    (93,54),
    (91,62),
    (88,71),
    (83,79),
    (77,84),
    (71,88),
    (63,92),
    (56,87),
    (57,79),
    (56,70),
    (60,65),
    (66,63),
    (71,58),
    (73,51),
    (72,43),
    (68,37),
    (69,28),
    (65,30),
    (56,31),
    (49,32),
    (42,32),
    (33,29),
    (29,28),
    (30,36),
    (26,42),
    (25,51),
    (28,58),
    (33,63),
    (40,66),
    (42,73),
    (36,77),
    (28,74),
    (23,69),
    (24,72),
    (28,78),
    (34,79),
    (42,84),
    (41,88)
  ]
